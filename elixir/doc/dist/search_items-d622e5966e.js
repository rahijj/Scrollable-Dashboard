searchNodes=[{"doc":"A simple set of functions to send SMS messages through the contegris service.This requires the CONTEGRIS_USER and CONTEGRIS_PASS environment variables to be set","ref":"EdMarkaz.Contegris.html","title":"EdMarkaz.Contegris","type":"module"},{"doc":"Perform a DELETE request.See request/1 or request/2 for options definition.delete(&quot;/users&quot;) delete(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) delete(client, &quot;/users&quot;) delete(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"EdMarkaz.Contegris.html#delete/3","title":"EdMarkaz.Contegris.delete/3","type":"function"},{"doc":"Perform a DELETE request.See request!/1 or request!/2 for options definition.delete!(&quot;/users&quot;) delete!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) delete!(client, &quot;/users&quot;) delete!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"EdMarkaz.Contegris.html#delete!/3","title":"EdMarkaz.Contegris.delete!/3","type":"function"},{"doc":"Perform a GET request.See request/1 or request/2 for options definition.get(&quot;/users&quot;) get(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) get(client, &quot;/users&quot;) get(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"EdMarkaz.Contegris.html#get/3","title":"EdMarkaz.Contegris.get/3","type":"function"},{"doc":"Perform a GET request.See request!/1 or request!/2 for options definition.get!(&quot;/users&quot;) get!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) get!(client, &quot;/users&quot;) get!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"EdMarkaz.Contegris.html#get!/3","title":"EdMarkaz.Contegris.get!/3","type":"function"},{"doc":"Perform a HEAD request.See request/1 or request/2 for options definition.head(&quot;/users&quot;) head(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) head(client, &quot;/users&quot;) head(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"EdMarkaz.Contegris.html#head/3","title":"EdMarkaz.Contegris.head/3","type":"function"},{"doc":"Perform a HEAD request.See request!/1 or request!/2 for options definition.head!(&quot;/users&quot;) head!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) head!(client, &quot;/users&quot;) head!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"EdMarkaz.Contegris.html#head!/3","title":"EdMarkaz.Contegris.head!/3","type":"function"},{"doc":"Perform a OPTIONS request.See request/1 or request/2 for options definition.options(&quot;/users&quot;) options(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) options(client, &quot;/users&quot;) options(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"EdMarkaz.Contegris.html#options/3","title":"EdMarkaz.Contegris.options/3","type":"function"},{"doc":"Perform a OPTIONS request.See request!/1 or request!/2 for options definition.options!(&quot;/users&quot;) options!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) options!(client, &quot;/users&quot;) options!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"EdMarkaz.Contegris.html#options!/3","title":"EdMarkaz.Contegris.options!/3","type":"function"},{"doc":"Perform a PATCH request.See request/1 or request/2 for options definition.patch(&quot;/users&quot;, %{name: &quot;Jon&quot;}) patch(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) patch(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) patch(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"EdMarkaz.Contegris.html#patch/4","title":"EdMarkaz.Contegris.patch/4","type":"function"},{"doc":"Perform a PATCH request.See request!/1 or request!/2 for options definition.patch!(&quot;/users&quot;, %{name: &quot;Jon&quot;}) patch!(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) patch!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) patch!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"EdMarkaz.Contegris.html#patch!/4","title":"EdMarkaz.Contegris.patch!/4","type":"function"},{"doc":"Perform a POST request.See request/1 or request/2 for options definition.post(&quot;/users&quot;, %{name: &quot;Jon&quot;}) post(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) post(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) post(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"EdMarkaz.Contegris.html#post/4","title":"EdMarkaz.Contegris.post/4","type":"function"},{"doc":"Perform a POST request.See request!/1 or request!/2 for options definition.post!(&quot;/users&quot;, %{name: &quot;Jon&quot;}) post!(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) post!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) post!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"EdMarkaz.Contegris.html#post!/4","title":"EdMarkaz.Contegris.post!/4","type":"function"},{"doc":"Perform a PUT request.See request/1 or request/2 for options definition.put(&quot;/users&quot;, %{name: &quot;Jon&quot;}) put(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) put(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) put(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"EdMarkaz.Contegris.html#put/4","title":"EdMarkaz.Contegris.put/4","type":"function"},{"doc":"Perform a PUT request.See request!/1 or request!/2 for options definition.put!(&quot;/users&quot;, %{name: &quot;Jon&quot;}) put!(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) put!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) put!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"EdMarkaz.Contegris.html#put!/4","title":"EdMarkaz.Contegris.put!/4","type":"function"},{"doc":"Perform a requestOptions::method - the request method, one of [:head, :get, :delete, :trace, :options, :post, :put, :patch]:url - either full url e.g. &quot;http://example.com/some/path&quot; or just &quot;/some/path&quot; if using Tesla.Middleware.BaseUrl:query - a keyword list of query params, e.g. [page: 1, per_page: 100]:headers - a keyworld list of headers, e.g. [{&quot;content-type&quot;, &quot;text/plain&quot;}]:body - depends on used middleware:by default it can be a binaryif using e.g. JSON encoding middleware it can be a nested mapif adapter supports it it can be a Stream with any of the above:opts - custom, per-request middleware or adapter optionsExamples:ExampleApi.request(method: :get, url: &quot;/users/path&quot;)You can also use shortcut methods like:ExampleApi.get(&quot;/users/1&quot;)orExampleApi.post(client, &quot;/users&quot;, %{name: &quot;Jon&quot;})","ref":"EdMarkaz.Contegris.html#request/2","title":"EdMarkaz.Contegris.request/2","type":"function"},{"doc":"Perform request and raise in case of error.This is similar to request/2 behaviour from Tesla 0.xSee request/2 for list of available options.","ref":"EdMarkaz.Contegris.html#request!/2","title":"EdMarkaz.Contegris.request!/2","type":"function"},{"doc":"","ref":"EdMarkaz.Contegris.html#send_sms/2","title":"EdMarkaz.Contegris.send_sms/2","type":"function"},{"doc":"Perform a TRACE request.See request/1 or request/2 for options definition.trace(&quot;/users&quot;) trace(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) trace(client, &quot;/users&quot;) trace(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"EdMarkaz.Contegris.html#trace/3","title":"EdMarkaz.Contegris.trace/3","type":"function"},{"doc":"Perform a TRACE request.See request!/1 or request!/2 for options definition.trace!(&quot;/users&quot;) trace!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) trace!(client, &quot;/users&quot;) trace!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"EdMarkaz.Contegris.html#trace!/3","title":"EdMarkaz.Contegris.trace!/3","type":"function"},{"doc":"","ref":"EdMarkaz.Contegris.html#t:option/0","title":"EdMarkaz.Contegris.option/0","type":"type"},{"doc":"An action handler template to be overwritten","ref":"Labs.ActionHandler.html","title":"Labs.ActionHandler","type":"module"},{"doc":"","ref":"Labs.ActionHandler.html#handle_action/2","title":"Labs.ActionHandler.handle_action/2","type":"function"},{"doc":"This module wraps the Postgrex module ensuring that the connection pool managed by Poolboy is used","ref":"Labs.DB.Postgres.html","title":"Labs.DB.Postgres","type":"module"},{"doc":"","ref":"Labs.DB.Postgres.html#query/4","title":"Labs.DB.Postgres.query/4","type":"function"},{"doc":"This is a sample Router page for implementing RESTful http endpoints","ref":"Labs.Router.html","title":"Labs.Router","type":"module"},{"doc":"Callback implementation for Plug.call/2.","ref":"Labs.Router.html#call/2","title":"Labs.Router.call/2","type":"function"},{"doc":"Callback implementation for Plug.init/1.","ref":"Labs.Router.html#init/1","title":"Labs.Router.init/1","type":"function"},{"doc":"Provides a simple set of functions for interacting with SlackRequires SLACK_TOKEN environment variable to be set","ref":"Labs.Slack.html","title":"Labs.Slack","type":"module"},{"doc":"Perform a DELETE request.See request/1 or request/2 for options definition.delete(&quot;/users&quot;) delete(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) delete(client, &quot;/users&quot;) delete(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"Labs.Slack.html#delete/3","title":"Labs.Slack.delete/3","type":"function"},{"doc":"Perform a DELETE request.See request!/1 or request!/2 for options definition.delete!(&quot;/users&quot;) delete!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) delete!(client, &quot;/users&quot;) delete!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"Labs.Slack.html#delete!/3","title":"Labs.Slack.delete!/3","type":"function"},{"doc":"Perform a GET request.See request/1 or request/2 for options definition.get(&quot;/users&quot;) get(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) get(client, &quot;/users&quot;) get(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"Labs.Slack.html#get/3","title":"Labs.Slack.get/3","type":"function"},{"doc":"Perform a GET request.See request!/1 or request!/2 for options definition.get!(&quot;/users&quot;) get!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) get!(client, &quot;/users&quot;) get!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"Labs.Slack.html#get!/3","title":"Labs.Slack.get!/3","type":"function"},{"doc":"Perform a HEAD request.See request/1 or request/2 for options definition.head(&quot;/users&quot;) head(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) head(client, &quot;/users&quot;) head(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"Labs.Slack.html#head/3","title":"Labs.Slack.head/3","type":"function"},{"doc":"Perform a HEAD request.See request!/1 or request!/2 for options definition.head!(&quot;/users&quot;) head!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) head!(client, &quot;/users&quot;) head!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"Labs.Slack.html#head!/3","title":"Labs.Slack.head!/3","type":"function"},{"doc":"Perform a OPTIONS request.See request/1 or request/2 for options definition.options(&quot;/users&quot;) options(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) options(client, &quot;/users&quot;) options(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"Labs.Slack.html#options/3","title":"Labs.Slack.options/3","type":"function"},{"doc":"Perform a OPTIONS request.See request!/1 or request!/2 for options definition.options!(&quot;/users&quot;) options!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) options!(client, &quot;/users&quot;) options!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"Labs.Slack.html#options!/3","title":"Labs.Slack.options!/3","type":"function"},{"doc":"Perform a PATCH request.See request/1 or request/2 for options definition.patch(&quot;/users&quot;, %{name: &quot;Jon&quot;}) patch(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) patch(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) patch(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Labs.Slack.html#patch/4","title":"Labs.Slack.patch/4","type":"function"},{"doc":"Perform a PATCH request.See request!/1 or request!/2 for options definition.patch!(&quot;/users&quot;, %{name: &quot;Jon&quot;}) patch!(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) patch!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) patch!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Labs.Slack.html#patch!/4","title":"Labs.Slack.patch!/4","type":"function"},{"doc":"Perform a POST request.See request/1 or request/2 for options definition.post(&quot;/users&quot;, %{name: &quot;Jon&quot;}) post(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) post(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) post(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Labs.Slack.html#post/4","title":"Labs.Slack.post/4","type":"function"},{"doc":"Perform a POST request.See request!/1 or request!/2 for options definition.post!(&quot;/users&quot;, %{name: &quot;Jon&quot;}) post!(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) post!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) post!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Labs.Slack.html#post!/4","title":"Labs.Slack.post!/4","type":"function"},{"doc":"Perform a PUT request.See request/1 or request/2 for options definition.put(&quot;/users&quot;, %{name: &quot;Jon&quot;}) put(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) put(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) put(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Labs.Slack.html#put/4","title":"Labs.Slack.put/4","type":"function"},{"doc":"Perform a PUT request.See request!/1 or request!/2 for options definition.put!(&quot;/users&quot;, %{name: &quot;Jon&quot;}) put!(&quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;]) put!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}) put!(client, &quot;/users&quot;, %{name: &quot;Jon&quot;}, query: [scope: &quot;admin&quot;])","ref":"Labs.Slack.html#put!/4","title":"Labs.Slack.put!/4","type":"function"},{"doc":"Perform a requestOptions::method - the request method, one of [:head, :get, :delete, :trace, :options, :post, :put, :patch]:url - either full url e.g. &quot;http://example.com/some/path&quot; or just &quot;/some/path&quot; if using Tesla.Middleware.BaseUrl:query - a keyword list of query params, e.g. [page: 1, per_page: 100]:headers - a keyworld list of headers, e.g. [{&quot;content-type&quot;, &quot;text/plain&quot;}]:body - depends on used middleware:by default it can be a binaryif using e.g. JSON encoding middleware it can be a nested mapif adapter supports it it can be a Stream with any of the above:opts - custom, per-request middleware or adapter optionsExamples:ExampleApi.request(method: :get, url: &quot;/users/path&quot;)You can also use shortcut methods like:ExampleApi.get(&quot;/users/1&quot;)orExampleApi.post(client, &quot;/users&quot;, %{name: &quot;Jon&quot;})","ref":"Labs.Slack.html#request/2","title":"Labs.Slack.request/2","type":"function"},{"doc":"Perform request and raise in case of error.This is similar to request/2 behaviour from Tesla 0.xSee request/2 for list of available options.","ref":"Labs.Slack.html#request!/2","title":"Labs.Slack.request!/2","type":"function"},{"doc":"","ref":"Labs.Slack.html#send_alert/2","title":"Labs.Slack.send_alert/2","type":"function"},{"doc":"Perform a TRACE request.See request/1 or request/2 for options definition.trace(&quot;/users&quot;) trace(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) trace(client, &quot;/users&quot;) trace(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"Labs.Slack.html#trace/3","title":"Labs.Slack.trace/3","type":"function"},{"doc":"Perform a TRACE request.See request!/1 or request!/2 for options definition.trace!(&quot;/users&quot;) trace!(&quot;/users&quot;, query: [scope: &quot;admin&quot;]) trace!(client, &quot;/users&quot;) trace!(client, &quot;/users&quot;, query: [scope: &quot;admin&quot;])","ref":"Labs.Slack.html#trace!/3","title":"Labs.Slack.trace!/3","type":"function"},{"doc":"","ref":"Labs.Slack.html#t:option/0","title":"Labs.Slack.option/0","type":"type"},{"doc":"This is a module that deals with the saving of a Sync'd state into a database (currently Postgres).Much of this is to be used as an example, for customized sync'd code in the future, though it can be used out of the box.Typically you only need runtime access to the save/2, load/1 and get_writes/2 functions.","ref":"Labs.Store.Syncr.html","title":"Labs.Store.Syncr","type":"module"},{"doc":"","ref":"Labs.Store.Syncr.html#get_writes/2","title":"Labs.Store.Syncr.get_writes/2","type":"function"},{"doc":"","ref":"Labs.Store.Syncr.html#load/1","title":"Labs.Store.Syncr.load/1","type":"function"},{"doc":"","ref":"Labs.Store.Syncr.html#save/2","title":"Labs.Store.Syncr.save/2","type":"function"},{"doc":"","ref":"Labs.Store.Syncr.html#save_flattened/2","title":"Labs.Store.Syncr.save_flattened/2","type":"function"},{"doc":"","ref":"Labs.Store.Syncr.html#save_writes/2","title":"Labs.Store.Syncr.save_writes/2","type":"function"},{"doc":"A module which enables in memory syncing of an object through the sending of mutations","ref":"Labs.Syncr.html","title":"Labs.Syncr","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"Labs.Syncr.html#child_spec/1","title":"Labs.Syncr.child_spec/1","type":"function"},{"doc":"","ref":"Labs.Syncr.html#get_db/1","title":"Labs.Syncr.get_db/1","type":"function"},{"doc":"Callback implementation for GenServer.init/1.","ref":"Labs.Syncr.html#init/1","title":"Labs.Syncr.init/1","type":"function"},{"doc":"","ref":"Labs.Syncr.html#start_link/1","title":"Labs.Syncr.start_link/1","type":"function"},{"doc":"","ref":"Labs.Syncr.html#sync_changes/4","title":"Labs.Syncr.sync_changes/4","type":"function"},{"doc":"This module wraps low-level websocket behaviour and should not need to be altered.It enables reply/request behaviour on websocket messages which are leveraged by the Labs typescript Syncr library","ref":"Labs.Websocket.html","title":"Labs.Websocket","type":"module"},{"doc":"","ref":"Labs.Websocket.html#handle_json/2","title":"Labs.Websocket.handle_json/2","type":"function"},{"doc":"Callback implementation for c::cowboy_websocket.init/2.","ref":"Labs.Websocket.html#init/2","title":"Labs.Websocket.init/2","type":"function"},{"doc":"Callback implementation for c::cowboy_websocket.terminate/3.","ref":"Labs.Websocket.html#terminate/3","title":"Labs.Websocket.terminate/3","type":"function"},{"doc":"Callback implementation for c::cowboy_websocket.websocket_handle/2.","ref":"Labs.Websocket.html#websocket_handle/2","title":"Labs.Websocket.websocket_handle/2","type":"function"},{"doc":"Callback implementation for c::cowboy_websocket.websocket_info/2.","ref":"Labs.Websocket.html#websocket_info/2","title":"Labs.Websocket.websocket_info/2","type":"function"},{"doc":"Callback implementation for c::cowboy_websocket.websocket_init/1.","ref":"Labs.Websocket.html#websocket_init/1","title":"Labs.Websocket.websocket_init/1","type":"function"},{"doc":"A simple set of functions for uploading images to a google storage bucket.","ref":"Sarkar.Storage.Google.html","title":"Sarkar.Storage.Google","type":"module"},{"doc":"","ref":"Sarkar.Storage.Google.html#upload_image/3","title":"Sarkar.Storage.Google.upload_image/3","type":"function"},{"doc":"","ref":"Sarkar.Storage.Google.html#upload_image_from_url/2","title":"Sarkar.Storage.Google.upload_image_from_url/2","type":"function"}]